/*!
 * portf
 * My portfolio
 * https://github.com/yakovlevgleb/portf
 * @author Gleb Yakovlev
 * @version 1.0.2
 * Copyright 2017. MIT licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}body,html{width:100%;height:100%}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.header{position:fixed;z-index:1;top:0;right:0;left:0;border:1px solid rgba(0,0,0,.1);background-color:#fff}.header .container{padding:10px;background-color:#fff;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-ms-flex-wrap:wrap;flex-wrap:wrap}.header .container,.navigation ul{display:-webkit-box;display:-ms-flexbox;display:flex}.navigation ul{list-style:none}.navigation ul li{position:relative;overflow:hidden;margin-right:35px}.navigation ul li:last-child{margin:0}.navigation ul li:before{position:absolute;bottom:0;left:0;overflow:hidden;width:100%;height:3px;content:"";transition:-webkit-transform .2s linear;transition:transform .2s linear;transition:transform .2s linear,-webkit-transform .2s linear;-webkit-transform:translate(-100%);transform:translate(-100%);background-color:transparent}.navigation ul li.is-active:before,.navigation ul li:hover:before{-webkit-transform:translate(0);transform:translate(0);background-color:#ffde38}.navigation ul li a{text-decoration:none;letter-spacing:2px;text-transform:uppercase;color:#000;font-size:14px;font-weight:700;line-height:20px}@media only screen and (min-width:570px){.header .container{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}}body{background:#fff;font-family:Roboto,Arial,sans-serif}.main{margin-top:150px}.container{max-width:900px;margin:0 auto}.author{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.author__photo{margin-right:20px}.author__photo img{border-radius:50%}.author__name{font-weight:500}.intro{margin-bottom:50px}.intro h1{font-size:58px;line-height:91px}.intro h1,.intro p{margin-bottom:0;text-align:center;font-weight:300}.intro p{margin-top:12px;font-size:15px;font-style:normal;line-height:28px}.portfolio{margin-bottom:50px}.portfolio .container{-ms-flex-pack:distribute;justify-content:space-around}.portfolio .container,.preview{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.preview{overflow:hidden;width:280px;margin-right:10px;margin-bottom:30px;margin-left:10px;box-shadow:0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12),0 2px 4px -1px rgba(0,0,0,.2)}.preview__img{width:100%;height:100%}.preview__description{padding:15px}.preview__description h1{margin:0;margin-bottom:10px;font-size:13px;font-weight:600;line-height:20px}.preview__description h1 span{margin:0;font-size:13px;line-height:20px}.preview__link{width:100%;text-align:center}.preview__link:hover{transition:all .6s ease;-webkit-transform:scale(1.1);transform:scale(1.1);opacity:.65}.footer{border:1px solid rgba(0,0,0,.1)}.footer .container{-ms-flex-wrap:wrap;flex-wrap:wrap}.footer .container,.footer__copyrights{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.footer__copyrights{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.social__list{display:-webkit-box;display:-ms-flexbox;display:flex;list-style:none}.social__item{margin:0 10px;opacity:.6}.social__item:hover{transition:all .2s ease;-webkit-transform:scale(1.2);transform:scale(1.2);opacity:.9}@media only screen and (min-width:570px){.footer .container{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
